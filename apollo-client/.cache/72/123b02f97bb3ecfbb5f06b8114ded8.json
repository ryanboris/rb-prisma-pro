{"id":"../node_modules/apollo-cache/lib/types/Cache.js","dependencies":[{"name":"/Users/rb/Documents/rb-prisma-pro/apollo-client/node_modules/apollo-cache/lib/types/Cache.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/rb/Documents/rb-prisma-pro/apollo-client/node_modules/apollo-cache/src/types/Cache.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/rb/Documents/rb-prisma-pro/apollo-client/package.json","includedInParent":true,"mtime":1546061612068},{"name":"/Users/rb/Documents/rb-prisma-pro/.babelrc","includedInParent":true,"mtime":1545816068275},{"name":"/Users/rb/Documents/rb-prisma-pro/apollo-client/node_modules/apollo-cache/package.json","includedInParent":true,"mtime":1546060266030}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cache = void 0;\nvar Cache;\nexports.Cache = Cache;\n\n(function (Cache) {})(Cache || (exports.Cache = Cache = {}));","map":{"mappings":[{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":7,"column":0}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":7,"column":4}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":7,"column":9}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":1}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":10,"column":11}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":16}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":10,"column":18}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":40,"column":1},"generated":{"line":10,"column":19}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":20}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":10,"column":22}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":10,"column":27}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":17},"generated":{"line":10,"column":48}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":10,"column":53}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":10,"column":56}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":22},"generated":{"line":10,"column":58}},{"source":"../../src/types/Cache.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":59}}],"sources":{"../../src/types/Cache.ts":"import { DataProxy } from './DataProxy';\n\nexport namespace Cache {\n  export type WatchCallback = (newData: any) => void;\n  export interface EvictionResult {\n    success: Boolean;\n  }\n\n  export interface ReadOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n    previousResult?: any;\n    optimistic: boolean;\n  }\n\n  export interface WriteOptions<TResult = any, TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    dataId: string;\n    result: TResult;\n  }\n\n  export interface DiffOptions extends ReadOptions {\n    returnPartialData?: boolean;\n  }\n\n  export interface WatchOptions extends ReadOptions {\n    callback: WatchCallback;\n  }\n\n  export interface EvictOptions<TVariables = any>\n    extends DataProxy.Query<TVariables> {\n    rootId?: string;\n  }\n\n  export import DiffResult = DataProxy.DiffResult;\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\n  export import WriteDataOptions = DataProxy.WriteDataOptions;\n  export import Fragment = DataProxy.Fragment;\n}\n"},"lineCount":null}},"hash":"4d5ea905e7616d61809c1b2fce8128bb","cacheData":{"env":{}}}